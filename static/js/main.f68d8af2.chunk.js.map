{"version":3,"sources":["Routes/Routes.js","Components/Header/HomeIcon.js","Components/Header/Header.js","Components/Header/styles.js","Components/Authentication/Login/Login.js","Components/Authentication/Login/styles.js","Components/Home/Home.js","Components/Home/styles.js","helpers/localStorage.js","Components/Post/CreatePost/CreatePost.js","Components/Post/CreatePost/styles.js","Components/Authentication/Logout/Logout.js","Components/Authentication/Logout/styles.js","Components/ProtectedRoute/ProtectedRoute.js","Components/Post/PostsComponent/styles.js","Components/Post/PostNonEditable/styles.js","Components/Post/PostNonEditable/PostNonEditable.js","Components/Post/PostsComponent/Posts.js","Components/Post/PostEditable/styles.js","Components/Post/PostEditable/PostEditable.js","Components/Comment/CreateComment/CreateComment.js","Components/Comment/CreateComment/styles.js","Components/Comment/CommentEditable/styles.js","Context/context.js","Components/Comment/CommentEditable/CommentEditable.js","Components/Comment/Comments/Comments.js","Components/Comment/Comments/styles.js","Components/Post/PostDetails/PostDetails.js","Components/Post/PostDetails/styles.js","Components/ScrollToTop/ScrollToTop.js","Components/Main/Main.js","Components/Main/styles.js","serviceWorker.js","index.js"],"names":["ROUTES","home","process","auth","create","postById","HomeIcon","props","SvgIcon","d","VARIABLES","Header","handleCreatePostClick","icClicked","isLoggedIn","this","classes","AppBar","position","Toolbar","className","toolbar","to","logo","IconButton","edge","color","aria-label","onClick","e","fontSize","Typography","variant","createPostLink","Button","linkBtn","size","authLink","React","Component","withStyles","display","justifyContent","textDecoration","marginLeft","Login","onUsernameChange","event","setState","username","target","value","isUsernameEmpty","onPasswordChange","password","isPasswordEmpty","isPasswordCorrect","passUser","user","handleLogIn","history","isCreatePostClicked","push","handleSubmitOnEnter","key","state","users","newUser","trim","some","forEach","loginContainer","loginContent","titleSection","title","usernameInput","TextField","id","label","error","fullWidth","onChange","onKeyDown","passwordInput","type","autoComplete","loginBtn","withRouter","width","marginTop","fontWeight","marginBottom","margin","homeContainer","homeContent","textAlign","textSection","text","path","loadState","stateName","serializedState","localStorage","getItem","JSON","parse","err","saveState","stringify","setItem","Error","monthNames","CreatePost","onTitleChange","onContentChange","content","onPostAdd","date","Date","now","getMonth","getDate","getFullYear","posts","currentId","userId","currentUserId","uuid","handlePostAdd","createPostContainer","createPostContent","Card","cardSection","CardContent","gutterBottom","titleTextField","placeholder","contentDiv","contentTextField","multiline","rows","btnDiv","Fab","boxShadow","Logout","handleLogOut","logoutContainer","logoutContent","logoutTitleSection","logoutText","flexDirection","alignItems","ProtectedRoute","component","rest","computedMatch","postId","params","pathname","styles","postContainer","cardWrapper","padding","avatarSection","avatar","backgroundColor","red","contentSection","CardActions","learnMoreLink","post","find","toUpperCase","Avatar","Posts","postsContainer","postSection","ul","map","editIcon","buttonsSection","PostEditable","handleIsEdit","onSubmit","onRemove","filter","comments","comment","isEdit","correctUser","disabled","CreateComment","onCommentChange","onCommentAdd","newComment","createCommentContainer","createCommentContent","commentDiv","commentTextField","userSection","commentSection","Context","createContext","context","useContext","useState","setComment","setComments","commentText","setCommentText","setIsEdit","useEffect","singleComment","prevState","onCommentRemove","filteredComments","PostDetails","commentToRemove","createCommentSection","commentsSection","Provider","alignSelf","ScrollToTop","prevProps","location","window","scrollTo","children","Main","loggedUser","isOnline","newUsers","isClicked","mainContainer","exact","length","minHeight","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f68d8af2.chunk.js","sourcesContent":["export const ROUTES = {\r\n  home: `${process.env.REACT_APP_BASE_ROUTE}`,\r\n  auth: `${process.env.REACT_APP_BASE_ROUTE}auth`,\r\n  create: `${process.env.REACT_APP_BASE_ROUTE}create`,\r\n  postById: `${process.env.REACT_APP_BASE_ROUTE}post`\r\n};\r\n","import React from 'react';\r\n\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nfunction HomeIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default HomeIcon;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\nimport { ROUTES } from '../../Routes/Routes';\r\nimport HomeIcon from './HomeIcon';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst VARIABLES = {\r\n  home: 'Blog',\r\n  createPost: 'Create Post',\r\n  loginButtonLabel: 'Log in',\r\n  logoutButtonLabel: 'Log out'\r\n};\r\n\r\nclass Header extends React.Component {\r\n  handleCreatePostClick = icClicked => {\r\n    const { isLoggedIn, handleCreatePostClick } = this.props;\r\n\r\n    if (!isLoggedIn) {\r\n      handleCreatePostClick(icClicked);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, isLoggedIn } = this.props;\r\n\r\n    return (\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Link to={ROUTES.home} className={classes.logo}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"blog\"\r\n              onClick={e => this.handleCreatePostClick(false, e)}\r\n            >\r\n              <HomeIcon fontSize=\"large\" />\r\n              <Typography variant=\"h4\">{VARIABLES.home}</Typography>\r\n            </IconButton>\r\n          </Link>\r\n          <Link to={ROUTES.create} className={classes.createPostLink}>\r\n            <Button\r\n              className={classes.linkBtn}\r\n              color=\"inherit\"\r\n              size=\"large\"\r\n              onClick={() => this.handleCreatePostClick(true)}\r\n            >\r\n              {VARIABLES.createPost}\r\n            </Button>\r\n          </Link>\r\n          <Link to={ROUTES.auth} className={classes.authLink}>\r\n            {isLoggedIn ? (\r\n              <Button className={classes.linkBtn} size=\"large\">\r\n                {VARIABLES.logoutButtonLabel}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                className={classes.linkBtn}\r\n                size=\"large\"\r\n                onClick={() => this.handleCreatePostClick(false)}\r\n              >\r\n                {VARIABLES.loginButtonLabel}\r\n              </Button>\r\n            )}\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","export const styles = {\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start'\r\n  },\r\n  logo: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  },\r\n  createPostLink: {\r\n    marginLeft: '40px',\r\n    textDecoration: 'none'\r\n  },\r\n  authLink: {\r\n    marginLeft: 'auto',\r\n    textDecoration: 'none'\r\n  },\r\n  linkBtn: {\r\n    color: 'white'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\nimport { ROUTES } from '../../../Routes/Routes';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst VARIABLES = {\r\n  title: 'Log in',\r\n  usernameLabel: '* Username',\r\n  passwordLabel: '* Password',\r\n  buttonLabel: 'Log In',\r\n  usernameErrorLabel: '* Username is empty',\r\n  passwordErrorLabel: '* Password is empty',\r\n  incorrectPassword: '* Password is incorrect'\r\n};\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const users = props.users || [];\r\n\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      isUsernameEmpty: false,\r\n      isPasswordEmpty: false,\r\n      isPasswordCorrect: true,\r\n      users\r\n    };\r\n  }\r\n\r\n  onUsernameChange = event => {\r\n    this.setState({ username: event.target.value, isUsernameEmpty: false });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({\r\n      password: event.target.value,\r\n      isPasswordEmpty: false,\r\n      isPasswordCorrect: true\r\n    });\r\n  };\r\n\r\n  passUser = (\r\n    user,\r\n    handleLogIn,\r\n    history,\r\n    handleCreatePostClick,\r\n    isCreatePostClicked\r\n  ) => {\r\n    handleLogIn(true, user);\r\n\r\n    if (isCreatePostClicked) {\r\n      history.push(ROUTES.create);\r\n\r\n      handleCreatePostClick(false);\r\n    } else {\r\n      history.push(ROUTES.home);\r\n    }\r\n  };\r\n\r\n  handleSubmitOnEnter = e => {\r\n    if (e.key === 'Enter') {\r\n      this.handleLogIn();\r\n    }\r\n  };\r\n\r\n  handleLogIn = () => {\r\n    const { username, password, users } = this.state;\r\n    const {\r\n      handleLogIn,\r\n      history,\r\n      isCreatePostClicked,\r\n      handleCreatePostClick\r\n    } = this.props;\r\n\r\n    if (!username && !password) {\r\n      this.setState({ isUsernameEmpty: true, isPasswordEmpty: true });\r\n    } else if (!username) {\r\n      this.setState({ isUsernameEmpty: true });\r\n    } else if (!password) {\r\n      this.setState({ isPasswordEmpty: true });\r\n    } else {\r\n      const newUser = { username: username.trim(), password };\r\n\r\n      const isUserRegistered = users.some(\r\n        user => user.username === newUser.username\r\n      );\r\n\r\n      if (isUserRegistered) {\r\n        users.forEach(user => {\r\n          if (user.password === newUser.password) {\r\n            this.setState(\r\n              {\r\n                username: '',\r\n                password: '',\r\n                isUsernameEmpty: false,\r\n                isPasswordEmpty: false,\r\n                isPasswordCorrect: true\r\n              },\r\n              () => {\r\n                this.passUser(\r\n                  newUser,\r\n                  handleLogIn,\r\n                  history,\r\n                  handleCreatePostClick,\r\n                  isCreatePostClicked\r\n                );\r\n              }\r\n            );\r\n          } else {\r\n            this.setState({ isPasswordCorrect: false });\r\n          }\r\n        });\r\n      } else {\r\n        this.passUser(\r\n          newUser,\r\n          handleLogIn,\r\n          history,\r\n          handleCreatePostClick,\r\n          isCreatePostClicked\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      isUsernameEmpty,\r\n      isPasswordEmpty,\r\n      isPasswordCorrect\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.loginContainer}>\r\n        <div className={classes.loginContent}>\r\n          <div className={classes.titleSection}>\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n              {VARIABLES.title}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <div className={classes.usernameInput}>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label={\r\n                  isUsernameEmpty\r\n                    ? VARIABLES.usernameErrorLabel\r\n                    : VARIABLES.usernameLabel\r\n                }\r\n                error={isUsernameEmpty}\r\n                fullWidth\r\n                value={username}\r\n                onChange={e => this.onUsernameChange(e)}\r\n                onKeyDown={this.handleSubmitOnEnter}\r\n              />\r\n            </div>\r\n            <div className={classes.passwordInput}>\r\n              <TextField\r\n                id=\"standard-password-input\"\r\n                label={\r\n                  isPasswordCorrect\r\n                    ? isPasswordEmpty\r\n                      ? VARIABLES.passwordErrorLabel\r\n                      : VARIABLES.passwordLabel\r\n                    : VARIABLES.incorrectPassword\r\n                }\r\n                error={isPasswordEmpty || !isPasswordCorrect}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                fullWidth\r\n                value={password}\r\n                onChange={e => this.onPasswordChange(e)}\r\n                onKeyDown={this.handleSubmitOnEnter}\r\n              />\r\n            </div>\r\n            <div className={classes.loginBtn}>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={this.handleLogIn}\r\n              >\r\n                {VARIABLES.buttonLabel}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(Login));\r\n","export const styles = {\r\n  loginContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  loginContent: {\r\n    width: '50%'\r\n  },\r\n  titleSection: {\r\n    marginTop: '20px'\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  },\r\n  usernameInput: {\r\n    marginTop: '16px',\r\n    marginBottom: '8px'\r\n  },\r\n  passwordInput: {\r\n    marginTop: '16px',\r\n    marginBottom: '8px'\r\n  },\r\n  loginBtn: {\r\n    margin: '30px 0'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\nimport { ROUTES } from '../../Routes/Routes';\r\nimport Login from '../Authentication/Login/Login';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst VARIABLES = {\r\n  header: 'There is no post on web-site.',\r\n  textAsLinkToLogIn: 'Log in',\r\n  textIsNotLoggedIn: ' and be our first story teller.',\r\n  textAsLinkToPosts: 'share your story!',\r\n  textIsLoggedIn: \"You've logged in, \"\r\n};\r\n\r\nfunction Home({ classes, isLoggedIn }) {\r\n  return (\r\n    <div className={classes.homeContainer}>\r\n      <div className={classes.homeContent}>\r\n        <div className={classes.titleSection}>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            {VARIABLES.header}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.textSection}>\r\n          {isLoggedIn ? (\r\n            <Typography variant=\"h4\" className={classes.text}>\r\n              {VARIABLES.textIsLoggedIn}{' '}\r\n              <Link to={ROUTES.create}>{VARIABLES.textAsLinkToPosts}</Link>\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant=\"h4\" className={classes.text}>\r\n              <Link to={ROUTES.auth}>{VARIABLES.textAsLinkToLogIn}</Link>\r\n              {VARIABLES.textIsNotLoggedIn}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        <Route path={ROUTES.auth}>\r\n          <Login />\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);\r\n","export const styles = {\r\n  homeContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  homeContent: {\r\n    width: '50%'\r\n  },\r\n  titleSection: {\r\n    marginTop: '20px',\r\n    textAlign: 'center'\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSection: {\r\n    marginTop: '40px',\r\n    textAlign: 'center'\r\n  },\r\n  text: {\r\n    fontWeight: 'bold'\r\n  }\r\n};\r\n","export const loadState = stateName => {\r\n  try {\r\n    const serializedState = localStorage.getItem(stateName);\r\n\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (stateName, value) => {\r\n  try {\r\n    const serializedState = JSON.stringify(value);\r\n\r\n    localStorage.setItem(stateName, serializedState);\r\n  } catch (err) {\r\n    throw new Error(\"Can't save changes in local storage\");\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'react-uuid';\r\n\r\nimport { styles } from './styles';\r\nimport { ROUTES } from '../../../Routes/Routes';\r\nimport { saveState, loadState } from '../../../helpers/localStorage';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst VARIABLES = {\r\n  title: 'Tell us your story!'\r\n};\r\n\r\nconst monthNames = [\r\n  'JAN',\r\n  'FEB',\r\n  'MAR',\r\n  'APR',\r\n  'MAY',\r\n  'JUN',\r\n  'JUL',\r\n  'AUG',\r\n  'SEP',\r\n  'OCT',\r\n  'NOV',\r\n  'DEC'\r\n];\r\n\r\nclass CreatePost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const currentId = uuid();\r\n    const posts = loadState('posts') || [];\r\n\r\n    this.state = {\r\n      title: '',\r\n      content: '',\r\n      posts,\r\n      currentId,\r\n      currentUserId: this.props.currentUserId\r\n    };\r\n  }\r\n\r\n  onTitleChange = event => {\r\n    this.setState({ title: event.target.value });\r\n  };\r\n\r\n  onContentChange = event => {\r\n    this.setState({ content: event.target.value });\r\n  };\r\n\r\n  onPostAdd = () => {\r\n    const date = new Date();\r\n    const now =\r\n      monthNames[date.getMonth()] +\r\n      ' ' +\r\n      date.getDate() +\r\n      ' ' +\r\n      date.getFullYear();\r\n\r\n    this.setState(\r\n      state => ({\r\n        posts: [\r\n          {\r\n            id: state.currentId,\r\n            title: state.title,\r\n            content: state.content,\r\n            date: now,\r\n            userId: state.currentUserId\r\n          },\r\n          ...state.posts\r\n        ],\r\n        currentId: uuid(),\r\n        title: '',\r\n        content: ''\r\n      }),\r\n      () => {\r\n        saveState('posts', this.state.posts);\r\n\r\n        this.props.handlePostAdd(this.state.posts);\r\n        this.props.history.push(ROUTES.home);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { title, content } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.createPostContainer}>\r\n        <div className={classes.createPostContent}>\r\n          <Card className={classes.cardSection}>\r\n            <CardContent>\r\n              <Typography className={classes.title} variant=\"h6\" gutterBottom>\r\n                {VARIABLES.title}\r\n              </Typography>\r\n              <div>\r\n                <TextField\r\n                  className={classes.titleTextField}\r\n                  placeholder=\"Write the title...\"\r\n                  id=\"standard-basic\"\r\n                  label=\"* Title\"\r\n                  value={title}\r\n                  onChange={e => this.onTitleChange(e)}\r\n                />\r\n              </div>\r\n              <div className={classes.contentDiv}>\r\n                <TextField\r\n                  className={classes.contentTextField}\r\n                  placeholder=\"Write the post...\"\r\n                  id=\"standard-multiline-static\"\r\n                  label=\"* Content\"\r\n                  multiline\r\n                  rows=\"10\"\r\n                  value={content}\r\n                  onChange={e => this.onContentChange(e)}\r\n                />\r\n              </div>\r\n              <div className={classes.btnDiv}>\r\n                <Fab color=\"primary\" onClick={this.onPostAdd}>\r\n                  <CheckIcon />\r\n                </Fab>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreatePost.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(CreatePost));\r\n","export const styles = {\r\n  createPostContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  createPostContent: {\r\n    width: '75%'\r\n  },\r\n  cardSection: {\r\n    margin: '20px',\r\n    boxShadow:\r\n      '0px 1px 5px 0px rgba(0, 0, 0, 0.2),' +\r\n      ' 0px 2px 2px 0px rgba(0, 0, 0, 0.14),' +\r\n      ' 0px 3px 1px -2px rgba(0, 0, 0, 0.12)'\r\n  },\r\n  title: {\r\n    textAlign: 'center'\r\n  },\r\n  titleTextField: {\r\n    width: '75%'\r\n  },\r\n  contentDiv: {\r\n    margin: '16px 0'\r\n  },\r\n  contentTextField: {\r\n    width: '100%'\r\n  },\r\n  btnDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst VARIABLES = {\r\n  title: 'Log out',\r\n  text: 'Are you sure you want to log out?',\r\n  buttonLabel: 'Log out'\r\n};\r\n\r\nclass Logout extends React.Component {\r\n  handleLogOut = () => {\r\n    const {\r\n      handleLogOut,\r\n      isCreatePostClicked,\r\n      handleCreatePostClick\r\n    } = this.props;\r\n    handleLogOut(false);\r\n\r\n    if (isCreatePostClicked) {\r\n      handleCreatePostClick(false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.logoutContainer}>\r\n        <div className={classes.logoutContent}>\r\n          <div className={classes.logoutTitleSection}>\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n              {VARIABLES.title}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.logoutText}>\r\n            <Typography variant=\"h6\">{VARIABLES.text}</Typography>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={() => this.handleLogOut()}\r\n            >\r\n              {VARIABLES.buttonLabel}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogout.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Logout);\r\n","export const styles = {\r\n  logoutContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  logoutContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '50%'\r\n  },\r\n  logoutTitleSection: {\r\n    margin: '20px 0'\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  },\r\n  logoutText: {\r\n    margin: '16px 0'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { ROUTES } from '../../Routes/Routes';\r\nimport Login from '../Authentication/Login';\r\nimport Logout from '../Authentication/Logout';\r\n\r\nexport default function ProtectedRoute({ component: Component, ...rest }) {\r\n  const {\r\n    isLoggedIn,\r\n    path,\r\n    handleLogIn,\r\n    handleLogOut,\r\n    handleCreatePostClick,\r\n    isCreatePostClicked,\r\n    currentUserId,\r\n    handlePostAdd,\r\n    posts,\r\n    users,\r\n    computedMatch\r\n  } = rest;\r\n\r\n  if (path === ROUTES.auth) {\r\n    return isLoggedIn ? (\r\n      <Route path={path}>\r\n        <Logout\r\n          handleLogOut={handleLogOut}\r\n          isCreatePostClicked={isCreatePostClicked}\r\n          handleCreatePostClick={handleCreatePostClick}\r\n        />\r\n      </Route>\r\n    ) : (\r\n      <Route path={path}>\r\n        <Login\r\n          users={users}\r\n          handleLogIn={handleLogIn}\r\n          isCreatePostClicked={isCreatePostClicked}\r\n          handleCreatePostClick={handleCreatePostClick}\r\n        />\r\n      </Route>\r\n    );\r\n  } else {\r\n    return isLoggedIn ? (\r\n      <Route path={path}>\r\n        <Component\r\n          currentUserId={currentUserId}\r\n          handlePostAdd={handlePostAdd}\r\n          posts={posts}\r\n          {...rest}\r\n          postId={computedMatch.params.id}\r\n        />\r\n      </Route>\r\n    ) : (\r\n      <Redirect to={{ pathname: ROUTES.auth }} />\r\n    );\r\n  }\r\n}\r\n","export const styles = {\r\n  postsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  titleSection: {\r\n    margin: '20px'\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  },\r\n  postSection: {\r\n    width: '100%'\r\n  },\r\n  ul: {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n};\r\n","import { red } from '@material-ui/core/colors';\r\n\r\nexport const styles = {\r\n  postContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  cardSection: {\r\n    width: '75%'\r\n  },\r\n  cardWrapper: {\r\n    margin: '20px',\r\n    padding: '20px',\r\n    boxShadow:\r\n      '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)'\r\n  },\r\n  CardContent: {\r\n    padding: 0\r\n  },\r\n  titleSection: {\r\n    display: 'flex',\r\n    padding: '16px 24px'\r\n  },\r\n  avatarSection: {\r\n    margin: 'auto 16px auto 0'\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  },\r\n  contentSection: {\r\n    padding: '16px 24px'\r\n  },\r\n  CardActions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  learnMoreLink: {\r\n    textDecoration: 'none'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\nimport { ROUTES } from '../../../Routes/Routes';\r\nimport { loadState } from '../../../helpers/localStorage';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nfunction PostNonEditable(props) {\r\n  const { classes } = props;\r\n  const { title, content, date, userId, id } = props.post;\r\n  const users = loadState('users');\r\n  const user = users.find(user => user.id === userId);\r\n  const avatar = user.username[0].toUpperCase();\r\n\r\n  return (\r\n    <div className={classes.postContainer}>\r\n      <div className={classes.cardSection}>\r\n        <Card className={classes.cardWrapper}>\r\n          <CardContent className={classes.CardContent}>\r\n            <div className={classes.titleSection}>\r\n              <div className={classes.avatarSection}>\r\n                <Avatar className={classes.avatar}>{avatar}</Avatar>\r\n              </div>\r\n              <div>\r\n                <Typography gutterBottom>{title}</Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                  {date} by {user.username}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.contentSection}>\r\n              <Typography>{content}</Typography>\r\n            </div>\r\n          </CardContent>\r\n          <CardActions className={classes.CardActions}>\r\n            <Link\r\n              to={`${ROUTES.postById}/${id}`}\r\n              className={classes.learnMoreLink}\r\n            >\r\n              <Button size=\"medium\" color=\"secondary\">\r\n                Learn More\r\n              </Button>\r\n            </Link>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPostNonEditable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PostNonEditable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\nimport Post from '../PostNonEditable';\r\nimport { loadState } from '../../../helpers/localStorage';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst VARIABLES = {\r\n  title: 'Posts'\r\n};\r\n\r\nclass Posts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const posts = loadState('posts') || [];\r\n\r\n    this.state = {\r\n      posts\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { posts } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.postsContainer}>\r\n        <div className={classes.titleSection}>\r\n          <Typography className={classes.title} variant=\"h4\">\r\n            {VARIABLES.title}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.postSection}>\r\n          <ul className={classes.ul}>\r\n            {posts.map(post => (\r\n              <Post key={post.id} post={post} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Posts);\r\n","import { red } from '@material-ui/core/colors';\r\n\r\nexport const styles = {\r\n  postContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  cardSection: {\r\n    width: '75%'\r\n  },\r\n  cardWrapper: {\r\n    margin: '20px',\r\n    padding: '20px',\r\n    boxShadow:\r\n      '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)'\r\n  },\r\n  CardContent: {\r\n    padding: 0\r\n  },\r\n  titleSection: {\r\n    display: 'flex',\r\n    padding: '16px 24px'\r\n  },\r\n  avatarSection: {\r\n    margin: 'auto 16px auto 0'\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  },\r\n  editIcon: {\r\n    marginLeft: 'auto'\r\n  },\r\n  contentSection: {\r\n    padding: '16px 24px'\r\n  },\r\n  contentTextField: {\r\n    width: '100%'\r\n  },\r\n  CardActions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  buttonsSection: {\r\n    display: 'flex'\r\n  },\r\n  btnDiv: {\r\n    marginLeft: '20px'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\nimport { ROUTES } from '../../../Routes/Routes';\r\nimport { saveState, loadState } from '../../../helpers/localStorage';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { withStyles } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass PostEditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { posts, post, comments, currentUserId } = this.props;\r\n    const content = post.content;\r\n    const users = loadState('users');\r\n    const user = users.find(user => user.id === post.userId);\r\n\r\n    this.state = {\r\n      posts,\r\n      post,\r\n      content,\r\n      comments,\r\n      currentUserId,\r\n      users,\r\n      user,\r\n      isEdit: false\r\n    };\r\n  }\r\n\r\n  onContentChange = event => {\r\n    this.setState({ content: event.target.value });\r\n  };\r\n\r\n  handleIsEdit = () => {\r\n    this.onSubmit();\r\n  };\r\n\r\n  onRemove = () => {\r\n    this.setState(\r\n      state => ({\r\n        posts: state.posts.filter(post => post.id !== state.post.id),\r\n        comments: state.comments.filter(\r\n          comment => comment.postId !== state.post.id\r\n        )\r\n      }),\r\n      () => {\r\n        saveState('posts', this.state.posts);\r\n\r\n        saveState('comments', this.state.comments);\r\n\r\n        this.props.history.push(ROUTES.home);\r\n      }\r\n    );\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.setState(\r\n      state => ({\r\n        post: { ...state.post, content: state.content }\r\n      }),\r\n      () =>\r\n        this.setState(\r\n          state => ({\r\n            posts: state.posts.map(post =>\r\n              post.id === state.post.id ? state.post : post\r\n            ),\r\n            isEdit: !state.isEdit\r\n          }),\r\n          () => saveState('posts', this.state.posts)\r\n        )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { content, isEdit, user, currentUserId } = this.state;\r\n    const { classes } = this.props;\r\n    const { title, date } = this.state.post;\r\n    const avatar = user.username[0].toUpperCase();\r\n    const correctUser = currentUserId === user.id;\r\n\r\n    return (\r\n      <div className={classes.postContainer}>\r\n        <div className={classes.cardSection}>\r\n          <Card className={classes.cardWrapper}>\r\n            <CardContent className={classes.CardContent}>\r\n              <div className={classes.titleSection}>\r\n                <div className={classes.avatarSection}>\r\n                  <Avatar className={classes.avatar}>{avatar}</Avatar>\r\n                </div>\r\n                <div>\r\n                  <Typography gutterBottom>{title}</Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    {date} by {user.username}\r\n                  </Typography>\r\n                </div>\r\n                <div className={classes.editIcon}>\r\n                  <IconButton\r\n                    onClick={() => this.handleIsEdit()}\r\n                    disabled={!correctUser}\r\n                  >\r\n                    <CreateIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n              <div className={classes.contentSection}>\r\n                {isEdit ? (\r\n                  <TextField\r\n                    className={classes.contentTextField}\r\n                    placeholder=\"Write the post...\"\r\n                    id=\"standard-multiline-static\"\r\n                    label=\"Post\"\r\n                    multiline\r\n                    rows=\"5\"\r\n                    value={content}\r\n                    onChange={e => this.onContentChange(e)}\r\n                  />\r\n                ) : (\r\n                  <Typography>{content}</Typography>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n            <CardActions className={classes.CardActions}>\r\n              <div className={classes.buttonsSection}>\r\n                <div className={classes.btnDiv}>\r\n                  <Fab\r\n                    onClick={this.onRemove}\r\n                    disabled={!correctUser}\r\n                    color=\"secondary\"\r\n                  >\r\n                    <DeleteIcon />\r\n                  </Fab>\r\n                </div>\r\n                <div className={classes.btnDiv}>\r\n                  <Fab\r\n                    color=\"primary\"\r\n                    disabled={!isEdit}\r\n                    onClick={this.onSubmit}\r\n                  >\r\n                    <CheckIcon />\r\n                  </Fab>\r\n                </div>\r\n              </div>\r\n            </CardActions>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostEditable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(PostEditable));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'react-uuid';\r\n\r\nimport { styles } from './styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst monthNames = [\r\n  'JAN',\r\n  'FEB',\r\n  'MAR',\r\n  'APR',\r\n  'MAY',\r\n  'JUN',\r\n  'JUL',\r\n  'AUG',\r\n  'SEP',\r\n  'OCT',\r\n  'NOV',\r\n  'DEC'\r\n];\r\n\r\nclass CreateComment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const currentId = uuid();\r\n\r\n    this.state = {\r\n      comment: '',\r\n      currentId,\r\n      postId: this.props.post.id,\r\n      userId: this.props.currentUserId\r\n    };\r\n  }\r\n\r\n  onCommentChange = event => {\r\n    this.setState({ comment: event.target.value });\r\n  };\r\n\r\n  onCommentAdd = () => {\r\n    const { currentId, comment, userId, postId } = this.state;\r\n    const date = new Date();\r\n    const now =\r\n      monthNames[date.getMonth()] +\r\n      ' ' +\r\n      date.getDate() +\r\n      ' ' +\r\n      date.getFullYear();\r\n\r\n    const newComment = {\r\n      id: currentId,\r\n      comment,\r\n      date: now,\r\n      userId,\r\n      postId\r\n    };\r\n\r\n    this.setState({ comment: '', currentId: uuid() }, () => {\r\n      this.props.onCommentAdd(newComment);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { comment } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.createCommentContainer}>\r\n        <div className={classes.createCommentContent}>\r\n          <div className={classes.commentDiv}>\r\n            <TextField\r\n              className={classes.commentTextField}\r\n              placeholder=\"Write the comment...\"\r\n              id=\"standard-multiline-static\"\r\n              label=\"* Comment\"\r\n              multiline\r\n              rows=\"4\"\r\n              value={comment}\r\n              onChange={e => this.onCommentChange(e)}\r\n            />\r\n          </div>\r\n          <div className={classes.btnDiv}>\r\n            <Fab\r\n              color=\"primary\"\r\n              onClick={this.onCommentAdd}\r\n              disabled={!comment}\r\n            >\r\n              <CheckIcon />\r\n            </Fab>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateComment.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CreateComment);\r\n","export const styles = {\r\n  createCommentContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  createCommentContent: {\r\n    width: '75%'\r\n  },\r\n  commentDiv: {\r\n    margin: '16px 0'\r\n  },\r\n  commentTextField: {\r\n    width: '100%'\r\n  },\r\n  btnDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n};\r\n","import { red } from '@material-ui/core/colors';\r\n\r\nexport const styles = {\r\n  postContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  cardSection: {\r\n    width: '75%'\r\n  },\r\n  cardWrapper: {\r\n    margin: '20px',\r\n    padding: '20px',\r\n    boxShadow:\r\n      '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)'\r\n  },\r\n  CardContent: {\r\n    padding: 0\r\n  },\r\n  titleSection: {\r\n    display: 'flex',\r\n    padding: '16px 24px'\r\n  },\r\n  avatarSection: {\r\n    margin: 'auto 16px auto 0'\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  },\r\n  userSection: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  editIcon: {\r\n    marginLeft: 'auto'\r\n  },\r\n  commentSection: {\r\n    padding: '16px 24px'\r\n  },\r\n  commentTextField: {\r\n    width: '100%'\r\n  },\r\n  CardActions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  buttonsSection: {\r\n    display: 'flex'\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nexport const Context = React.createContext(null);","import React, { useState, useEffect, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\nimport { Context } from '../../../Context/context';\r\nimport { saveState, loadState } from '../../../helpers/localStorage';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { withStyles } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction CommentEditable(props) {\r\n  const context = useContext(Context);\r\n\r\n  const [comment, setComment] = useState(props.comment);\r\n  const [comments, setComments] = useState(context.comments);\r\n  const [commentText, setCommentText] = useState(comment.comment);\r\n  const [currentUserId] = useState(context.currentUserId);\r\n  const [users] = useState(loadState('users'));\r\n  const [user] = useState(users.find(user => user.id === comment.userId));\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setComments(\r\n      comments.map(singleComment =>\r\n        singleComment.id === comment.id\r\n          ? { ...comment, comment: commentText }\r\n          : singleComment\r\n      )\r\n    );\r\n  }, [comment]);\r\n\r\n  useEffect(() => {\r\n    saveState('comments', comments);\r\n  }, [comments]);\r\n\r\n  const onCommentChange = event => {\r\n    setCommentText(event.target.value);\r\n  };\r\n\r\n  const handleIsEdit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  const onRemove = () => {\r\n    context.onCommentRemove(comment);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setComment(prevState => ({ ...prevState, comment: commentText }));\r\n\r\n    setIsEdit(!isEdit);\r\n  };\r\n\r\n  const { classes } = props;\r\n  const { date } = comment;\r\n  const avatar = user.username[0].toUpperCase();\r\n  const correctUser = currentUserId === user.id;\r\n\r\n  return (\r\n    <div className={classes.postContainer}>\r\n      <div className={classes.cardSection}>\r\n        <Card className={classes.cardWrapper}>\r\n          <CardContent className={classes.CardContent}>\r\n            <div className={classes.titleSection}>\r\n              <div className={classes.avatarSection}>\r\n                <Avatar className={classes.avatar}>{avatar}</Avatar>\r\n              </div>\r\n              <div className={classes.userSection}>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                  {date} by {user.username}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.editIcon}>\r\n                <IconButton\r\n                  onClick={() => handleIsEdit()}\r\n                  disabled={!correctUser}\r\n                >\r\n                  <CreateIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n            <div className={classes.commentSection}>\r\n              {isEdit ? (\r\n                <TextField\r\n                  className={classes.commentTextField}\r\n                  placeholder=\"Write the comment...\"\r\n                  id=\"standard-multiline-static\"\r\n                  label=\"Comment\"\r\n                  multiline\r\n                  rows=\"5\"\r\n                  value={commentText}\r\n                  onChange={e => onCommentChange(e)}\r\n                />\r\n              ) : (\r\n                <Typography>{commentText}</Typography>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n          <CardActions className={classes.CardActions}>\r\n            <div className={classes.buttonsSection}>\r\n              <div className={classes.btnDiv}>\r\n                <IconButton\r\n                  onClick={onRemove}\r\n                  disabled={!correctUser}\r\n                  color=\"secondary\"\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </div>\r\n              <div>\r\n                <IconButton\r\n                  disabled={!isEdit}\r\n                  onClick={onSubmit}\r\n                  color=\"primary\"\r\n                >\r\n                  <CheckIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCommentEditable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CommentEditable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\nimport Comment from '../CommentEditable';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nfunction Comments({ classes, comments, postId }) {\r\n  const filteredComments = comments.filter(\r\n    comment => comment.postId === postId\r\n  );\r\n\r\n  return (\r\n    <div className={classes.postsContainer}>\r\n      <div className={classes.postSection}>\r\n        <ul className={classes.ul}>\r\n          {filteredComments.map(comment => (\r\n            <Comment key={comment.id} comment={comment} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nComments.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Comments);\r\n","export const styles = {\r\n  postsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  postSection: {\r\n    width: '100%'\r\n  },\r\n  ul: {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { styles } from './styles';\r\nimport Post from '../PostEditable';\r\nimport CreateComment from '../../Comment/CreateComment';\r\nimport Comments from '../../Comment/Comments';\r\nimport { Context } from '../../../Context/context';\r\nimport { saveState, loadState } from '../../../helpers/localStorage';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst VARIABLES = {\r\n  titlePost: 'Post',\r\n  titleComment: 'Comments'\r\n};\r\n\r\nclass PostDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const posts = loadState('posts') || [];\r\n    const post = posts.find(post => post.id === this.props.postId);\r\n    const comments = loadState('comments') || [];\r\n\r\n    this.state = {\r\n      posts,\r\n      post,\r\n      comments\r\n    };\r\n  }\r\n\r\n  onCommentAdd = comment => {\r\n    this.setState(\r\n      state => ({\r\n        comments: [comment, ...state.comments]\r\n      }),\r\n      () => {\r\n        saveState('comments', this.state.comments);\r\n      }\r\n    );\r\n  };\r\n\r\n  onCommentRemove = commentToRemove => {\r\n    this.setState(\r\n      state => ({\r\n        comments: state.comments.filter(\r\n          comment => comment.id !== commentToRemove.id\r\n        )\r\n      }),\r\n      () => saveState('comments', this.state.comments)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { posts, post, comments } = this.state;\r\n    const { classes, currentUserId, postId } = this.props;\r\n\r\n    return (\r\n      <div className={classes.postsContainer}>\r\n        <div className={classes.titleSection}>\r\n          <Typography className={classes.title} variant=\"h4\">\r\n            {VARIABLES.titlePost}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.postSection}>\r\n          <Post\r\n            key={post.id}\r\n            post={post}\r\n            posts={posts}\r\n            comments={comments}\r\n            currentUserId={currentUserId}\r\n          />\r\n        </div>\r\n        <div className={classes.titleSection}>\r\n          <Typography className={classes.title} variant=\"h5\">\r\n            {VARIABLES.titleComment}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.createCommentSection}>\r\n          <CreateComment\r\n            post={post}\r\n            onCommentAdd={this.onCommentAdd}\r\n            comments={comments}\r\n            currentUserId={currentUserId}\r\n          />\r\n        </div>\r\n        <div className={classes.commentsSection}>\r\n          <Context.Provider\r\n            value={{\r\n              comments,\r\n              currentUserId,\r\n              onCommentRemove: this.onCommentRemove\r\n            }}\r\n          >\r\n            <Comments comments={comments} postId={postId} />\r\n          </Context.Provider>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostDetails.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PostDetails);\r\n","export const styles = {\r\n  postsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  titleSection: {\r\n    margin: '10px',\r\n    alignSelf: 'flex-start',\r\n    marginLeft: '12%'\r\n  },\r\n  title: { fontWeight: 'bold' },\r\n  postSection: {\r\n    width: '100%'\r\n  },\r\n  createCommentSection: {\r\n    width: '75%'\r\n  },\r\n  commentsSection: {\r\n    width: '75%'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'react-uuid';\r\n\r\nimport { styles } from './styles';\r\nimport { ROUTES } from '../../Routes/Routes';\r\nimport Header from '../Header';\r\nimport Home from '../Home';\r\nimport CreatePost from '../Post/CreatePost';\r\nimport ProtectedRoute from '../ProtectedRoute';\r\nimport Posts from '../Post/PostsComponent';\r\nimport PostDetails from '../Post/PostDetails';\r\nimport ScrollToTop from '../ScrollToTop';\r\nimport { saveState, loadState } from '../../helpers/localStorage';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const users = loadState('users') || [];\r\n    const currentId = uuid();\r\n    const posts = loadState('posts') || [];\r\n    const isLoggedIn = users.some(user => user.isOnline);\r\n    const currentUserId = isLoggedIn\r\n      ? users.find(user => user.isOnline).id\r\n      : '';\r\n\r\n    this.state = {\r\n      isLoggedIn,\r\n      users,\r\n      currentId,\r\n      isCreatePostClicked: false,\r\n      currentUserId,\r\n      posts\r\n    };\r\n  }\r\n\r\n  handleLogIn = (isLoggedIn, user) => {\r\n    const { username, password } = user;\r\n    const { users } = this.state;\r\n\r\n    const loggedUser = users.find(\r\n      user => user.username === username && user.password === password\r\n    );\r\n\r\n    if (loggedUser) {\r\n      this.setState(\r\n        state => ({\r\n          users: state.users.map(user =>\r\n            user.id === loggedUser.id\r\n              ? { ...user, isOnline: true }\r\n              : { ...user, isOnline: false }\r\n          ),\r\n          isLoggedIn,\r\n          currentUserId: loggedUser.id\r\n        }),\r\n        () => saveState('users', this.state.users)\r\n      );\r\n    } else {\r\n      this.setState(\r\n        state => ({\r\n          users: [\r\n            {\r\n              id: state.currentId,\r\n              username,\r\n              password,\r\n              isOnline: true\r\n            },\r\n            ...state.users\r\n          ],\r\n          currentId: uuid(),\r\n          isLoggedIn,\r\n          currentUserId: state.currentId\r\n        }),\r\n        () => saveState('users', this.state.users)\r\n      );\r\n    }\r\n  };\r\n\r\n  handleLogOut = isLoggedIn => {\r\n    const { users } = this.state;\r\n\r\n    const newUsers = users.map(user => ({\r\n      ...user,\r\n      isOnline: false\r\n    }));\r\n\r\n    this.setState(\r\n      {\r\n        users: newUsers,\r\n        isLoggedIn\r\n      },\r\n      () => saveState('users', this.state.users)\r\n    );\r\n  };\r\n\r\n  handleCreatePostClick = isClicked => {\r\n    this.setState({ isCreatePostClicked: isClicked });\r\n  };\r\n\r\n  handlePostAdd = posts => {\r\n    this.setState({ posts });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isLoggedIn,\r\n      isCreatePostClicked,\r\n      currentUserId,\r\n      posts,\r\n      users\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.mainContainer}>\r\n        <Router>\r\n          <ScrollToTop>\r\n            <Header\r\n              isLoggedIn={isLoggedIn}\r\n              handleCreatePostClick={this.handleCreatePostClick}\r\n            />\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Redirect to={{ pathname: ROUTES.home }} />\r\n              </Route>\r\n              <Route exact path={ROUTES.home}>\r\n                {posts.length > 0 ? (\r\n                  <Posts />\r\n                ) : (\r\n                  <Home isLoggedIn={isLoggedIn} />\r\n                )}\r\n              </Route>\r\n              <ProtectedRoute\r\n                path={ROUTES.create}\r\n                isLoggedIn={isLoggedIn}\r\n                component={CreatePost}\r\n                currentUserId={currentUserId}\r\n                handlePostAdd={this.handlePostAdd}\r\n              />\r\n              <ProtectedRoute\r\n                path={ROUTES.auth}\r\n                users={users}\r\n                isLoggedIn={isLoggedIn}\r\n                isCreatePostClicked={isCreatePostClicked}\r\n                handleLogIn={this.handleLogIn}\r\n                handleLogOut={this.handleLogOut}\r\n                handleCreatePostClick={this.handleCreatePostClick}\r\n              />\r\n              <ProtectedRoute\r\n                path={`${ROUTES.postById}/:id`}\r\n                isLoggedIn={isLoggedIn}\r\n                component={PostDetails}\r\n                currentUserId={currentUserId}\r\n                posts={posts}\r\n              />\r\n            </Switch>\r\n          </ScrollToTop>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Main);\r\n","export const styles = {\r\n  mainContainer: {\r\n    backgroundColor: '#f9f9f9',\r\n    minHeight: '100vh'\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Main from './Components/Main/';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}